#!/bin/bash

#(conky > /tmp/conky_fifo) &

dow[0]='日'
dow[1]='月'
dow[2]='火'
dow[3]='火'
dow[4]='水'
dow[5]='木'
dow[6]='土'

workspace() {
	desktop=1
	ws=""
	IFS=':' read -a array <<< $(bspc control --get-status)
	for item in "${array[@]}"
	do
		name=${item#?}
		if [ "$item" == "LT" ]
		then
			ws="${ws}%{S+}"
		else
			desk=""
			case $item in
				O*) # focused occupied
					desk="%{R} ${name} %{R}"
				;;
				F*) # focused free
					desk="%{R} ${name} %{R}"
				;;
				U*) # focused urgent
					desk="%{R} ${name} %{R}"
				;;
				o*) # occupied
					desk="%{+o} ${name} %{-o}"
				;;
				f*) # free
					desk=" ${name} "
				;;
				u*) # urgent
					desk=" {$name} "
				;;
			esac
			shift
			if [ "$desk" != "" ]
			then
				#ws="${ws}%{A:bspc desktop -f ^$desktop:}${desk}%{A}"
				ws="${ws}${desk}"
				desktop=$((desktop+1))
			fi
		fi
	done
	ws="${ws}${S0}"
	echo "${ws}"
}

clock() {
	echo "  ${dow[$(date '+%w')]}  •  $(date '+%m')月$(date '+%d')日  •  $(date '+%R')  "
}

battery() {
	power='/sys/class/power_supply'
	charge=$(if [ -d $power/BAT0 ]; then cat $power/BAT0/capacity; fi)

	echo -e "  ${charge}  "
}

volume() {
	status=$(amixer get Master)
	volume=''
	#icon=''
	if echo "$status" | grep -q off; then
		volume='—'
		#icon='\uf026'
	else
		volume=$(echo "$status" | egrep -o -m 1 "[0-9]+%" | tr -d '%')
		#icon='\uf028'
	fi

	echo -e "  $volume  "
}

skype() {
	if pgrep skype > /dev/null; then
		echo "  S  •"
	fi
}

telegram() {
	if pgrep Telegram > /dev/null; then
		echo "  T  •"
	fi
}

#system() {
	#fifo_contents=$(tail -n 1 /tmp/conky_fifo)
	#system_array=($fifo_contents)

	#if [[ "${system_array[0]}" != "down" ]]; then
		## Wifi
		#net=$(echo -e "${system_array[0]}/${system_array[1]}")
	#fi
	#if [[ "${system_array[2]}" != "down" ]]; then
		## Ethernet
		#net="$net$(echo -e "${system_array[2]}/${system_array[3]}")"
	#fi

	#echo -e "%{B{{ bar_block_bgc }}}  $net  %{B-}"
#}

# Kill conky when this script exits or dies
#function on_exit {
  #pkill -x conky
#}

#trap on_exit EXIT SIGHUP SIGINT SIGTERM

while :; do
	echo -e "%{U{{ bar_underline_color }}}$(workspace) %{r} $(telegram)$(skype)$(battery)•$(volume)•$(clock)"
	sleep 0.1
done | lemonbar \
	-g {{ bar_width }}x{{ bar_height }}+{{ bar_x }}+{{ bar_y }} \
	-B "{{ bar_bgc }}" \
	-F "{{ fgc }}" \
	-o {{ bar_font_offset }} \
	-u {{ bar_underline }} \
	{{ #bar_fonts }} -f "{{ . }}" {{ /bar_fonts }} | \
	while :; do read line; eval $line; done
