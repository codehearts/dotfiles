#!/usr/bin/env bash
# Runs colorz on an image file and saves those colors as a zenbu variable set
#
# Author:   Ethan Chan (https://github.com/metakirby5)
# Modified: fullsalvo  (https://github.com/fullsalvo)
# Modified: Kate Hart  (https://github.com/codehearts)
# Depends:  colorz (pypi), curl, reload-desktop (custom), zenbu (pypi)

SRC=~/.autowzb

COLORS=(
	black
	red
	green
	yellow
	blue
	magenta
	cyan
	white
)

read -r -d '' TEMPLATE << EOM
wallpapers: "%s"

name:           "%s"
colors:
  primary:      "%s"
  secondary:    "%s"
  black:
    normal:     "%s"
    bold:       "%s"
  red:
    normal:     "%s"
    bold:       "%s"
  green:
    normal:     "%s"
    bold:       "%s"
  yellow:
    normal:     "%s"
    bold:       "%s"
  blue:
    normal:     "%s"
    bold:       "%s"
  magenta:
    normal:     "%s"
    bold:       "%s"
  cyan:
    normal:     "%s"
    bold:       "%s"
  white:
    normal:     "%s"
    bold:       "%s"
EOM

read -r -d '' NOBW <<-'NOBW'
wallpapers: "%s"

name:           "%s"
colors:
  primary:      "%s"
  secondary:    "%s"
  red:
    normal:     "%s"
    bold:       "%s"
  green:
    normal:     "%s"
    bold:       "%s"
  yellow:
    normal:     "%s"
    bold:       "%s"
  blue:
    normal:     "%s"
    bold:       "%s"
  magenta:
    normal:     "%s"
    bold:       "%s"
  cyan:
    normal:     "%s"
    bold:       "%s"
NOBW


################
# Declarations #
################

declare primary="red"
declare secondary="blue"
declare temp=$NOBW
declare col=6

#############
# Functions #
#############

usage() {
    clear
    more <<-'HELP'
autowzb - sanpai theme generator
Usage:
autowzb [ command [ args... ] ] image file/URL
If image URL provided, image will be saved at "~/.autowzb".
Available colors: black, red,  green, yellow,
                  blue, magenta, cyan, white

Options:
  -h
        Show help options
  -p <color name>
        Set primary color for template
  -s <color name>
        Set secondary color for template
  -c
        Include black and white in the templating
          (default: no black and white)
HELP
}

err() {
	printf "\e[31m$1\e[0m" >&2
}

hl () {
	printf "\e[32m$1\e[0m" >&2
}

is_a_color() {
	[[ " ${COLORS[*]} " =~ *" $1 "* ]]
	return $?
}

wzb ()
{
	if [ "$#" -eq 0 ]; then
	zenbu >/dev/null
	else
	zenbu "$@" >/dev/null
	fi

	[ "$?" -ne 0 ] && exit 1

	reload-desktop
	[ "$#" -ne 0 ] && sleep 0.5

}

template ()
{
	if [ ! -f "$1" ]; then
	[[ "$1" != http* ]] && usage

	curl "$1" -o "$SRC" 2>/dev/null || (echo "URL invalid." && exit 1)
	else
  SRC="$1"
	fi

  SRC="$(readlink -f $SRC)"
  # Convert absolute home directory to ~
  RELATIVE_SRC="${SRC/$HOME/\~}"
  name="$(basename "$1" | cut -f 1 -d .)"

	# Starting...
	echo "Using primary = $primary, secondary = $secondary..."
	echo

	colors="$(colorz --no-preview -n $col $SRC)"
	[ "${PIPESTATUS[0]}" -ne 0 ] && exit 1

	yaml="$(echo \
  "$RELATIVE_SRC" "$name" \
  "$primary" "$secondary" \
  "$colors" |\
xargs printf "$temp")"

	echo "Writing $name.yaml"
  echo "$yaml" > ~/.config/zenbu/variable_sets/$name.yaml
	echo

	echo "Changing desktop..."
  zenbu $name > /dev/null
  reload-desktop

	exit
}

###########
# Options #
###########

while getopts ':hp:s:c' option; do
	case $option in
	h)
		usage
		exit
		;;
	p)
		primary="$OPTARG"
		;;
	s)
		secondary="$OPTARG"
		;;
	c)
		temp=$TEMPLATE
		col=8
		;;
	\?)
		err "-$OPTARG is not a valid option\n"
		exit
		;;
	esac
done
shift $((OPTIND-1))

########
# Main #
########

if [[ "$#" -ge 1 ]]; then
	template "$@"
fi
